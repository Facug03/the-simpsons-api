name: Build and Deploy BackendApp to ECS

on:
  push:
    branches:
      - main

env:
  ECR_IMAGE: ${{ vars.ECR_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  PORT: ${{ vars.PORT }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU for ARM64
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region  ${{ vars.AWS_DEFAULT_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEFAULT_REGION }}.amazonaws.com

      - name: Build and push Docker image
        run: |
          cd api
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/arm64 --build-arg PORT=$PORT -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_DEFAULT_REGION }}.amazonaws.com/${{ vars.ECR_IMAGE }}:latest --push .

      # - name: Deploy to ECS
      #   uses: imehedi/actions-awscli-v2@latest
      #   with:
      #     args: ecs update-service --cluster MpcsjNestJSStabilityIntegration --service MpcsjStabilityAPI --force-new-deployment
